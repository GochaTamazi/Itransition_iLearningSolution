Condition of the course project
IT IS REQUIRED TO DEVELOP A SITE TO MANAGE RECOMMENDATIONS "WHAT TO SEE / WHAT TO READ / WHAT TO PLAY ETC."

On the platform of your specialization (ASP.NET Core MVC), ORM and relational database (MySQL, SQL Server), Bootstrap is required.

Unauthenticated users can only access read-only mode (
search available,
creation of reviews is not available,
You can't read or leave comments
put likes and ratings).

Authenticated users have access to everything except the admin panel.

In the basic version, the admin panel is a list of users (as links to their pages).
The administrator sees each page of the user and each "review" as its creator (for example, he can edit or create a new "review" on behalf of the user from his page).

It is required to support login through social networks (at least two of any).

Full-text search on the site is available on each page (
search results are always reviews,
for example, if the text is found in a comment, which should be possible, then a link to the review is displayed).

Each user has his personal page, where he sees a list of his reviews (
table with filtering and sorting,
the ability to create/delete/edit a review/open in view mode).

Each review consists of:
names,

"group" (from a fixed set, for example, "Movies", "Books", "Games", etc.),

tags (several tags are entered, auto-completion is required - when the user starts entering a tag, a list with
variants of words that have already been introduced earlier on the site),

review text (with support for markdown formatting), up to three illustrations (storage in the cloud) and ratings from the author of 5-b. scale.


All pictures are saved in the cloud, loaded by drag-and-drop.

The main page displays: the latest added reviews, reviews with the highest ratings, tag cloud.

When the review is opened in Reading View (or by other users), *comments (required with an asterisk) are displayed below the review.

Each user can put down a "rating" (from 1 to 5 stars) to the product (no more than one from one user per review) - the average user rating is displayed next to the title of the review everywhere on the site. Those. There is "author rating" and "user rating".

Also, the user can like the review itself (no more than one per review from one user), these likes are added up for all reviews and are displayed next to the user's name.

If two users describe the same movie, it is not related in any way (see requirements with an asterisk).

The site must support two languages: Russian and English (the user chooses and the choice is saved). The language refers only to the UI, the content is not translated.

The site must support two designs (themes): light and dark (the user chooses and the choice is saved).

Necessarily:
Bootstrap
support for different resolutions (including phone),
ORM for data access (Entity Framework Core),
engine for full-text search (or by means of the database, or a separate engine - NOT FULL SCAN with selects).

Requirements with an asterisk (only optional, on 10/10, after the implementation of the remaining requirements):

* Comments are displayed below the review in view mode at the end.
Comments are linear, you cannot comment on a comment, a new one is added only "in the tail".
Automatic loading of comments - if I have a page with comments open and someone else adds a new one, it automatically appears for me (a delay of 2-5 seconds is possible).

* Advanced admin panel, which allows you to manage users (view, block, delete, appoint others as admins).

* Ability to download an arbitrary number of illustrations.

* Possibility to "link" different reviews for one product from different users (show links from one to the rest) and calculate the average rating for reviews.

IMPORTANT:
Do not copy any garbage from code dumps. It’s better to do less, but figure it out yourself in order to be able to answer how to change / add something on the fly.
Curators accept a huge number of the same type of projects and have probably seen most of the posted garbage on the topic.
As always, not everything can be done, but it's better to figure out a small part yourself than roll everything from a "friend from the Internet."







Условие курсового проекта
ТРЕБУЕТСЯ РАЗРАБОТАТЬ САЙТ ДЛЯ УПРАВЛЕНИЯ РЕКОМЕНLАЦИЯМИ "ЧЁ ПОСМОТРЕТЬ/ЧЁ ПОЧИТАТЬ/ВО ЧТО ПОИГРАТЬ И Т.Д."

На платформе своей специализации (ASP.NET Core MVC), обязательно ORM и реляционная база данных (MySQL, SQL Server), обязательно Bootstrap.

Неаутентифицированным пользователи доступен только режим read-only (
	доступен поиск, 
	недоступно создание обзоров, 
	нельзя читать и оставлять комментарии, 
	ставить лайки и рейтинги).

Аутентифицированные пользователи имеют доступ ко всему, кроме админки. 

В базовом варианте админка представляет собой список пользователей (как ссылок на их страницы).
Администратор видит каждую страницу пользователя и каждый "обзор" как ее создатель (например, может отредактировать или создать от имени пользователя с его страницы новый "обзор"). 

Требуется поддерживать вход через социальные сети (не менее двух любых).

На каждой странице доступен полнотекстовый поиск по сайту (
	результаты поиска - всегда обозоры, 
	например, если текст найден в комментарии, что должно быть возможно, то выводится ссылка на обзор).

У каждого пользователя есть его личная страница, на которой он видит список своих обзоров (
	таблица с фильтраций и сортировками, 
	возможность создать/удалить/редактировать обзор/открыть в режиме просмотра).

Каждый обзор состоит из: 
	названия, 

	"группа" (из фиксированного набора, например, "Кино", "Книги", "Игры" и т.п.), 

	тэгов (вводится несколько тэгов, необходимо автодополнение - когда пользователь начинает вводить тэг, выпадает список с 
		вариантами слов, которые уже вводились ранее на сайте), 

	текста обзора (с поддержкой форматирования markdown), до трёх изображений-иллюстраций (хранение в облаке) и оценки от автора по 5-б. шкале.


Все картинки сохраняются в облаке, загружаются драг-н-дропом.

На главной странице отображаются: последние добавленные обзоры, обзоры с самыми большими оценками, облако тэгов.

При открытие обзора в режиме чтения (или другими пользователями) под обзором отображаются *комментарии (требование со звездочкой).

Каждый пользовать может проставить "рейтинг" (от 1 до 5 звездочек) произведению (не более одного от одного пользователя на обзор) — средний пользовательский рейтинг отображается рядом с названием обзора везде на сайте. Т.е. есть "авторский рейтинг" и "юзерский рейтинг".

Также пользователь может поставить лайк самому обзору (не более одного на обзор от одного пользователя), эти лайки складываются по всем обзорам и отображаются рядом с именем пользователя.

Если два пользователя описывают одно кино, это никак не связано между собой (см. требования со звездочкой).

Сайт должен поддерживать два языка: русский и английский (пользователь выбирает и выбор сохраняется). Язык относится только к UI, контент не переводится. 

Сайт должен поддерживать два оформления (темы): светлое и темное (пользователь выбирает и выбор сохраняется).

Обязательно: 
	Bootstrap
	поддержка разных разрешений (в том числе телефон), 
	ORM для доступа к данным (Entity Framework Core), 
	движок для полнотекстового поиск (или средствами базы, или отдельный движок — НЕ ПОЛНОЕ СКАНИРОВАНИЕ селектами).

Требования со звездочкой (лишь опционально, на 10/10, после реализации остальных требований):

	* Под обзором в режиме просмотра в конце отображаются комментарии. 
		Комментарии линейные, нельзя комментировать комментарий, новый добавляется только "в хвост". 
		Автоматическая подгрузка комментариев — если у меня открыта страница с комментариями и кто-то другой добавляет новый, он у меня автомагически появляется (возможна задержка в 2-5 секунд).

	* Продвинутая админка, которая позволяет позволяет управлять пользователями (просматривать, блокировать, удалять, назначать других админами).

	* Возможность загрузки произвольного числа иллюстраций.

	* Возможность "связывать" разные обзоры на одно произведение от разных пользователей (показывать с одного ссылки на остальные) и считать средний рейтинг по обзорам.

ВАЖНО: 
	Не копируйте из кодо-помоек всякую фигню. Лучше сделайте меньше, но сами разберитесь, чтобы уметь ответить как на лету что-то поменять/добавить. 
	Кураторы принимают огромное количество однотипных проектов и видели, вероятно, большинство выложенной фигни на тему.
	Как всегда, можно сделать не все, но лучше разберитесь сами в небольшой части, чем скатайте всё у "приятеля из интернетов".

