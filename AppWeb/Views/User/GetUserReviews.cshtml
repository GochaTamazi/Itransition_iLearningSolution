@using Database.Models
@model dynamic

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
    var reviews = (List<Review>) ViewData["reviews"]!;
    var productGroups = (Dictionary<int, ProductGroup>) ViewData["productGroups"]!;
    var userId = (int) ViewData["userId"]!;
}

<h2>User Reviews</h2>

<style>
table {
  border-spacing: 0;
  width: 100%;
  border: 1px solid #ddd;
}

th {
  cursor: pointer;
}

th, td {
  text-align: left;
  padding: 16px;
}

tr:nth-child(even) {
  background-color: #E7E9EB;
}

.SearchInput {
  background-image: url('/searchicon.png');
  background-position: 10px 10px;
  background-repeat: no-repeat;
  font-size: 16px;
  padding: 12px 20px 12px 40px;
  border: 1px solid #ddd;
  margin-bottom: 12px;
}
</style>

<p>
    <a asp-controller="Review" asp-action="CreateOrUpdate"
       asp-route-userId="@userId"
       asp-route-reviewId="0">
        Create Review
    </a>
</p>


<p>
    <strong>Click the headers to sort the table.</strong>
</p>

<p>First click, the sorting is ascending (A to Z). Click again, the sorting will be descending (Z to A).</p>

<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Product"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Status"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Name"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Title"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Creation"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Redaction"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="Author Assessment"/>
<input type="text" class="SearchInput" onkeyup="myFunction()" placeholder="User Assessment"/>

<table id="myTable">
    <tr>
        <th onclick="sortTable(0)">Id</th>
        <th onclick="sortTable(1)">Product</th>
        <th onclick="sortTable(2)">Status</th>
        <th onclick="sortTable(3)">ProductName</th>
        <th onclick="sortTable(4)">Title</th>
        <th onclick="sortTable(5)">CreationDate</th>
        <th onclick="sortTable(6)">RedactionDate</th>
        <th onclick="sortTable(7)">AuthorAssessment</th>
        <th onclick="sortTable(8)">AverageUserRating</th>
    </tr>
    @foreach (var review in reviews)
    {
        <tr>
            <td>
                <a asp-controller="Review" asp-action="CreateOrUpdate"
                   asp-route-userId="@userId"
                   asp-route-reviewId="@review.Id">
                    @review.Id
                </a>
            </td>
            <td>@productGroups[review.ProductId].Name</td>
            <td>@review.Status.Name</td>
            <td>@review.ProductName</td>
            <td>@review.Title</td>
            <td>@review.CreationDate</td>
            <td>@review.RedactionDate</td>
            <td>@review.AuthorAssessment</td>
            <td>@review.AverageUserRating</td>
        </tr>
    }
</table>

<script>
function myFunction() {
    let searchInputs = document.getElementsByClassName("SearchInput")
    let table = document.getElementById("myTable");
    let trAll = table.getElementsByTagName("tr");

    for (let tr of trAll) {
        tr.style.display = "";
    }
    
    for (let index = 0; index < searchInputs.length; index++) {
        let filter = searchInputs[index].value.toLowerCase()
        if (filter <= 0) {
            continue
        }

        for (let tr of trAll) {
            let td = tr.getElementsByTagName("td")[index];
            if (td) {
                let txtValue = td.textContent || td.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    //tr.style.display = "";
                } else {
                    tr.style.display = "none";
                }
            }
        }

    }
}

function sortTable(n) {
    let table, rows, switching, i, x, y, shouldSwitch, dir, switchCount = 0;
    table = document.getElementById("myTable");
    switching = true;
    dir = "asc";
    while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 1; i < (rows.length - 1); i++) {
            shouldSwitch = false;
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            if (dir === "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            } else if (dir === "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
        }
        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchCount++;
        } else {
            if (switchCount === 0 && dir === "asc") {
                dir = "desc";
                switching = true;
            }
        }
    }
}
</script>