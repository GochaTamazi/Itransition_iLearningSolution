@using Database.Models
@using Microsoft.AspNetCore.Html
@{
    var review = (Review) ViewData["review"]!;
    var isUserLike = (bool) ViewData["IsUserLike"]!;

    var assessment = (byte?) ViewData["Assessment"]!;

    ViewBag.Title = $"Review | {review.Title} | {review.ProductName}";
    Layout = "_Layout";
}


<div class="card border-light mb-5">
    <div class="card-header">
        <h5>
            <a asp-controller="Product" asp-action="Get" asp-route-id="@review.Product.Id" class="Reviews-url hoverBold">
                @review.Product.Name
            </a>
            <a asp-controller="Review" asp-action="Get" asp-route-id="@review.Id" class="Reviews-url hoverBold">
                <small class="text-primary">@review.ProductName</small>
            </a>
        </h5>
    </div>
    <div class="card-body">
        <h4 class="card-title">
            <a asp-controller="Review" asp-action="Get" asp-route-id="@review.Id" class="Reviews-url hoverBold">
                @review.Title
            </a>
        </h4>
        <div class="reviewsContent mb-2">
            <a asp-controller="Review" asp-action="Get" asp-route-id="@review.Id" class="Reviews-url">
                <p class="card-text card-text-Review">
                    @(new HtmlString(review.Content))
                </p>
            </a>
        </div>
        <div class="reviewsTags">
            @{
                var tagsCount = 0;
                foreach (var reviewTag in review.ReviewTag)
                {
                    tagsCount++;
                    <a asp-controller="Tag" asp-action="Get" asp-route-id="@reviewTag.Tag.Id" class="Reviews-url hoverBold">
                        <span class="badge bg-secondary">
                            @reviewTag.Tag.Name
                        </span>
                    </a>
                    if (tagsCount > 5)
                    {
                        break;
                    }
                }
            }
        </div>
        <div>
            @for (var i = 1; i <= 5; i++)
            {
                if (i <= review.AuthorAssessment)
                {
                    <span class="fullStar">★</span>
                }
                else
                {
                    <span class="emptyStar">☆</span>
                }
            }
            <div class="reviewsUserRating">
                <img id="likeImg" class="like" src="/like_black.svg" alt=""/>
                <span id="likeCount">@review.ReviewLike.Count</span>
                User Rating:
                @if (review.AverageUserRating >= 4)
                {
                    <span class="badge rounded-pill bg-success">@review.AverageUserRating</span>
                }
                @if (review.AverageUserRating > 2.8 && review.AverageUserRating < 4)
                {
                    <span class="badge rounded-pill bg-warning">@review.AverageUserRating</span>
                }
                @if (review.AverageUserRating <= 2.8)
                {
                    <span class="badge rounded-pill bg-danger">@review.AverageUserRating</span>
                }
                
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <span class="star-cb-group   form-control-plaintext">
                        @{
                            for (var i = 5; i > 0; i--)
                            {
                                if (assessment != null && i == assessment)
                                {
                                    <input type="radio" checked="" id="rating-@i" name="UserRating" class="UserRating" value="@i"/>
                                    <label for="rating-@i">@i</label>
                                }
                                else
                                {
                                    <input type="radio" id="rating-@i" name="UserRating" class="UserRating" value="@i"/>
                                    <label for="rating-@i">@i</label>
                                }
                            }
                        }
                    </span>
                }
                
            </div>
        </div>
        <h6>
            <a asp-controller="User" asp-action="Get" asp-route-id="@review.Author.Id" class="Reviews-url hoverBold">
                @review.Author.Nickname
            </a> | @review.CreationDate
        </h6>
    </div>
</div>



<hr/>
<input type="hidden" id="Id" name="Id" value="@review.Id"/>
@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    <script>
        let UserRating = document.getElementsByClassName('UserRating')
        for (let v of UserRating) {
            v.onclick = function () {
                fetch(`/ReviewUserRating/Set?reviewId=@review.Id&assessment=${this.value}`, {method: "GET"})
            }
        }
    </script>

    <style>
        .like {
            cursor: pointer;
        }
    </style>
    <script>
        let likeImg = document.getElementById("likeImg")
        let likeCount = document.getElementById("likeCount")
        let isUserLike = @isUserLike.ToString().ToLower()
        
        let likeSrc = "/like_white.svg";
        if (isUserLike) {
            likeSrc = "/like_black.svg";
        }
        likeImg.src = likeSrc
        
        likeImg.onclick = function () {
            let fetchUrl = "/Like/Add?reviewId=@review.Id"
            if (isUserLike) {
                fetchUrl = "/Like/Remove?reviewId=@review.Id"
            }
            fetch(fetchUrl, {
                method: "GET"
            }).then((response) => {
                if (response.ok) {
                    if (isUserLike) {
                        likeImg.src = "/like_white.svg"
                    } else {
                        likeImg.src = "/like_black.svg"
                    }
                    isUserLike = !isUserLike
                    return response.text()
                }
            }).then((data) => {
                likeCount.innerText = data
            })
        }
    </script>
}



@if (review.Status.Name == "Common")
{
    <span>Comments:</span>
    foreach (var v in review.Comment)
    {
        //v.Content;
    }
}